services:
  app:
    container_name: computer-manager
    build: 
      context: .
      dockerfile: build/Dockerfile
    ports:
      - "${PORT:-8000}:8000"
    depends_on:
      postgres:
        condition: service_healthy
      # redis:
      #   condition: service_healthy
    networks:
      - app-net
    env_file:
      - .env
    command: air -c air.toml
    volumes:
      - .:/app
      - ./tmp:/app/tmp
  
  admin-alarm:
    image: greenbone/exercise-admin-notification
    ports:
      - "8080:8080"
    networks:
      - app-net

  postgres:
    image: postgres:15-alpine
    container_name: postgres-db
    ports:
      - "54322:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres", "-d", "postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-net

  # redis:
  #   image: redis:7-alpine
  #   container_name: redis-cache
  #   ports:
  #     - "63799:6379"
  #   volumes:
  #     - redis-data:/data
  #   command: [ "redis-server", "--save", "60", "1", "--loglevel", "warning" ]
  #   healthcheck:
  #     test: [ "CMD", "redis-cli", "ping" ]
  #     interval: 5s
  #     timeout: 5s
  #     retries: 5

  #   networks:
  #     - app-net

networks:
  bridge:
    - app-net

